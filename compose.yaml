services:
  mongo:
    image: mongo
    restart: always
    env_file:
      - .env
    ports:
      - "${MONGO_PORT:-27017}:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      MONGO_INIT_DATABASE: qubex
    volumes:
      - ${MONGO_DATA_PATH}:/data/db
    networks:
      - custom_net
  mongo-express:
    image: mongo-express
    restart: always
    env_file:
      - .env
    ports:
      - "${MONGO_EXPRESS_PORT:-8081}:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      ME_CONFIG_MONGODB_URL: mongodb://${MONGO_INITDB_ROOT_USERNAME}:${MONGO_INITDB_ROOT_PASSWORD}@mongo:27017/
      ME_CONFIG_BASICAUTH: false
    depends_on:
      - mongo
    networks:
      - custom_net
  postgres:
    image: postgres:14
    restart: always
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - ${POSTGRES_DATA_PATH}:/var/lib/postgresql/data
    networks:
      - custom_net
  prefect-server:
    image: prefecthq/prefect:2.20-python3.11
    restart: always
    env_file:
      - .env
    entrypoint: ["/bin/bash", "-c"]
    command: ["prefect server start --host 0.0.0.0"]
    ports:
      - "${PREFECT_PORT:-4200}:4200"
    environment:
      - PREFECT_API_DATABASE_CONNECTION_URL=postgresql+asyncpg://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      - PREFECT_EXPERIMENTAL_ENABLE_ENHANCED_CANCELLATION=True
      - PREFECT_WORKER_WEBSERVER_PORT=9090
    depends_on:
      - postgres
    networks:
      - custom_net
  workflow:
    build:
      context: .
      dockerfile: ./src/qdash/workflow/Dockerfile
    restart: always
    env_file:
      - .env
    depends_on:
      - prefect-server
      - mongo
    volumes:
      - ./src/qdash/workflow:/app/qdash/workflow
      - ./src/qdash/dbmodel:/app/qdash/dbmodel
      - ./src/qdash/datamodel:/app/qdash/datamodel
      - ./src/qdash/config.py:/app/qdash/config.py
      - ${CALIB_DATA_PATH}:/app/calib_data
      - ${CONFIG_PATH}:/app/config/qubex
    working_dir: /app/qdash/workflow
    command: python deployment/oqtopus/main.py
    environment:
      - BACKEND_URL=http://api:${API_PORT:-5715}
      - PREFECT_API_URL=http://prefect-server:4200/api
      - PREFECT_EXPERIMENTAL_ENABLE_EXTRA_RUNNER_ENDPOINTS=True
      - PREFECT_EXPERIMENTAL_ENABLE_ENHANCED_CANCELLATION=True
      - PREFECT_RUNNER_SERVER_HOST=127.0.0.1
      - PYTHONPATH=/app:/app/qdash/workflow:/app/qdash/dbmodel:/app/qdash
    networks:
      - custom_net
  api:
    build:
      context: .
      dockerfile: ./src/qdash/api/Dockerfile
    restart: always
    privileged: true
    env_file:
      - .env
    ports:
      - "${API_PORT:-5715}:${API_PORT:-5715}"
    volumes:
      - ./src/qdash/api:/app/qdash/api
      - ./src/qdash/dbmodel:/app/qdash/dbmodel
      - ./src/qdash/datamodel:/app/qdash/datamodel
      - ./src/qdash/config.py:/app/qdash/config.py
      - ${CALIB_DATA_PATH}:/app/calib_data
      - ${QPU_DATA_PATH}:/app/qpu_data
      - ${CONFIG_PATH}:/app/config
    working_dir: /app/qdash/api
    command: gunicorn main:app --workers 4 --worker-class uvicorn.workers.UvicornWorker --reload --bind :${API_PORT:-5715} --log-level debug
    develop:
      watch:
        - action: sync
          path: ./src/qdash/api
          target: /app/api
    depends_on:
      - mongo
      - prefect-server
    environment:
      - PYTHONPATH=/app:/app/qdash:/app/qdash/dbmodel:/app/qdash/datamodel:/app/qdash
      - CALIB_DATA_PATH=/app/calib_data
      - QPU_DATA_PATH=/app/qpu_data
      - PREFECT_API_URL=http://prefect-server:4200/api
    networks:
      - custom_net
  ui:
    build:
      context: .
      dockerfile: ./ui/Dockerfile.prod
      args:
        NEXT_PUBLIC_API_URL: ${NEXT_PUBLIC_API_URL}
    restart: always
    env_file:
      - .env
    ports:
      - "${UI_PORT:-5714}:${UI_PORT:-5714}"
    depends_on:
      - api
    command:
      [
        "bun",
        "run",
        "start",
        "--hostname",
        "0.0.0.0",
        "--port",
        "${UI_PORT:-5714}",
      ]
    networks:
      - custom_net

  agent:
    build:
      context: .
      dockerfile: ./src/qdash/slack_agent/Dockerfile
    restart: unless-stopped
    env_file:
      - .env
    volumes:
      - ./src/qdash/slack_agent:/app/qdash/slack_agent
      - ./src/qdash/dbmodel:/app/qdash/dbmodel
      - ./src/qdash/datamodel:/app/qdash/datamodel
      - ./src/qdash/config.py:/app/qdash/config.py
    environment:
      - PYTHONPATH=/app:/app/qdash:/app/qdash/dbmodel:/app/qdash/datamodel:/app/qdash
    working_dir: /app/qdash/slack_agent
    command: python main.py
    networks:
      - custom_net

networks:
  custom_net:
    external: false
