services:
  mongo:
    image: mongo
    restart: always
    env_file:
      - .env
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
      MONGO_INIT_DATABASE: cloud
    volumes:
      - ${MONGO_DATA_PATH}:/data/db
    networks:
      qdash:
        ipv4_address: 172.22.0.2

  mongo-express:
    image: mongo-express
    restart: always
    env_file:
      - .env
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
      ME_CONFIG_MONGODB_URL: mongodb://root:example@${MONGO_HOST}:27017/
      ME_CONFIG_BASICAUTH: false
    depends_on:
      - mongo
    networks:
      qdash:
        ipv4_address: 172.22.0.3

  postgres:
    image: postgres:14
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: prefect
      POSTGRES_DB: prefect
    ports:
      - "5432:5432"
    volumes:
      - ${POSTGRES_DATA_PATH}:/var/lib/postgresql/data
    networks:
      qdash:
        ipv4_address: 172.22.0.4

  prefect-server:
    image: prefecthq/prefect:2.20-python3.11
    restart: always
    env_file:
      - .env
    entrypoint: ["/bin/bash", "-c"]
    command: ["prefect server start --host 0.0.0.0"]
    ports:
      - "4200:4200"
    environment:
      - PREFECT_API_DATABASE_CONNECTION_URL=postgresql+asyncpg://postgres:prefect@${POSTGRES_HOST}:5432/prefect
      - PREFECT_EXPERIMENTAL_ENABLE_ENHANCED_CANCELLATION=True
      - PREFECT_WORKER_WEBSERVER_HOST=0.0.0.0
      - PREFECT_WORKER_WEBSERVER_PORT=9090
    depends_on:
      - postgres
    networks:
      qdash:
        ipv4_address: 172.22.0.5

  workflow:
    build:
      context: .
      dockerfile: ./src/qdash/workflow/Dockerfile
    restart: always
    env_file:
      - .env
      - .slack.env
    depends_on:
      - prefect-server
      - mongo
    volumes:
      - ./src/qdash/workflow:/app/qdash/workflow
      - ./src/qdash/dbmodel:/app/qdash/dbmodel
      - ./src/qdash/datamodel:/app/qdash/datamodel
      - ./src/qdash/neodbmodel:/app/qdash/neodbmodel
      - ${CALIB_DATA_PATH}:/app/calib_data
      # - /home/shared/config:/home/shared/config
    working_dir: /app/qdash/workflow
    command: python deployment/${ENV}/main.py
    environment:
      - BACKEND_URL=http://${QDASH_SERVER_HOST}:5715
      - PREFECT_API_URL=http://${PREFECT_HOST}:4200/api
      - PREFECT_EXPERIMENTAL_ENABLE_EXTRA_RUNNER_ENDPOINTS=True
      - PREFECT_EXPERIMENTAL_ENABLE_ENHANCED_CANCELLATION=True
      - PREFECT_RUNNER_SERVER_HOST=127.0.0.1
      - PYTHONPATH=/app:/app/qdash/workflow:/app/qdash/dbmodel
    network_mode: host

  api:
    build:
      context: .
      dockerfile: ./src/qdash/api/Dockerfile
    restart: always
    privileged: true
    env_file:
      - .env
    ports:
      - "5715:5715"
    volumes:
      - ./src/qdash/api:/app/qdash/api
      - ./src/qdash/dbmodel:/app/qdash/dbmodel
      - ./src/qdash/datamodel:/app/qdash/datamodel
      - ./src/qdash/neodbmodel:/app/qdash/neodbmodel
      - ${CALIB_DATA_PATH}:/app/calib_data
      - ${QPU_DATA_PATH}:/app/qpu_data
    working_dir: /app/qdash/api
    command: gunicorn main:app --workers 4 --worker-class uvicorn.workers.UvicornWorker --reload --bind 0.0.0.0:5715 --log-level info
    develop:
      watch:
        - action: sync
          path: ./src/qdash/api
          target: /app/api
    depends_on:
      - mongo
      - prefect-server
    environment:
      - PYTHONPATH=/app:/app/qdash:/app/qdash/dbmodel:/app/qdash/datamodel:/app/qdash/neodbmodel
      - CALIB_DATA_PATH=/app/calib_data
      - QPU_DATA_PATH=/app/qpu_data
      - PREFECT_API_URL=http://${PREFECT_HOST}:4200/api
    network_mode: host

  ui:
    build:
      context: .
      dockerfile: ./ui/Dockerfile.prod
    restart: always
    env_file:
      - .env
    ports:
      - "5714:5714"
    depends_on:
      - api
    network_mode: host

networks:
  qdash:
    driver: bridge
    ipam:
      config:
        - subnet: 172.22.0.0/24
