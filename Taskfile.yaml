version: 3

env:
  UV_LINK_MODE: copy

tasks:
  default:
    desc: Display available tasks
    cmds:
      - task -l

  generate:
    dir: ui
    dotenv: [.env]
    cmds:
      - curl $NEXT_PUBLIC_API_URL/openapi.json | jq > ../docs/oas/openapi.json
      - bunx orval --config ./orval.config.cjs
      - bunx prettier . --write
      - bunx eslint . --fix -c eslint.config.js
    desc: Generate the client

  docs:
    dir: docs
    cmds:
      - npm run docs:dev

  test:
    cmds:
      - uv run pytest tests/
    desc: Run all tests with pytest

  test-dbmodel:
    cmds:
      - uv run pytest tests/qdash/dbmodel/
    desc: Run database model tests

  test-coverage:
    cmds:
      - uv run pytest tests/ --cov=src/qdash --cov-report=term --cov-report=html
    desc: Run tests with coverage report

  test-mypy:
    cmds:
      - uv run mypy tests/
    desc: Run mypy type checking on tests

  build:
    dir: ui
    cmds:
      - bun run build

  build-docs:
    dir: docs
    cmds:
      - npm run docs:build

  fmt-ui:
    dir: ui
    cmds:
      - bunx prettier . --write
      - bunx eslint . --fix -c eslint.config.js
    desc: Format the UI code

  fmt:
    cmds:
      - uv run ruff format .
      - npx prettier . --write
      - npx eslint . --fix
    desc: Format common code

  lint:
    cmds:
      - uv run ruff check .
      - uv run ruff format --check .
    desc: Run linting checks

  lint-mypy:
    cmds:
      - uv run mypy src/
    desc: Run mypy type checking on source code

  tbls-docs:
    cmds:
      - tbls doc -c .tbls.yml -f
    desc: Generate DB Schema Docs

  export-api:
    cmds:
      - uv export --group api --no-hashes --no-emit-project --no-editable --format requirements-txt > ./src/qdash/api/requirements.txt
    desc: Export server requirements

  export-workflow:
    cmds:
      - uv export --group workflow --no-hashes --no-emit-project --no-editable --format requirements-txt > ./src/qdash/workflow/requirements.txt
    desc: Export qcflow requirements

  export-dev:
    cmds:
      - uv export --all-groups --no-hashes --no-emit-project --no-editable --format requirements-txt > .devcontainer/requirements.txt
    desc: Export all requirements

  export-agent:
    cmds:
      - uv export --group agent --no-hashes --no-emit-project --no-editable --format requirements-txt > ./src/qdash/slack_agent/requirements.txt
    desc: Export agent requirements
  export-all:
    cmds:
      - task export-api
      - task export-workflow
      - task export-dev
      - task export-agent
    desc: Export all requirements

  build-api:
    cmds:
      - task export-api
      - docker compose build --no-cache api

  build-workflow:
    cmds:
      - task export-workflow
      - docker compose build --no-cache workflow
