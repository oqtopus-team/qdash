version: 3

env:
  UV_LINK_MODE: copy

tasks:
  default:
    desc: Display available tasks
    cmds:
      - task -l

  generate:
    dir: ui
    dotenv: [.env]
    cmds:
      - curl $NEXT_PUBLIC_API_URL/openapi.json | jq > ../docs/oas/openapi.json
      - bunx orval --config ./orval.config.cjs
      - bunx prettier . --write
      - bunx run fmt
    desc: Generate the client

  docs:
    dir: docs
    cmds:
      - npm run docs:dev

  build:
    dir: ui
    cmds:
      - bun run build

  build-docs:
    dir: docs
    cmds:
      - npm run docs:build

  fmt-client:
    dir: client
    cmds:
      - npx prettier . --write
      - npx eslint . --fix
    desc: Format the client

  fmt:
    cmds:
      - ruff format .
      - npx prettier . --write
      - npx eslint . --fix
    desc: Format common code

  tbls-docs:
    cmds:
      - tbls doc -c .tbls.yml -f
    desc: Generate DB Schema Docs

  export-api:
    cmds:
      - uv export --group api --no-hashes --no-emit-project --no-editable --format requirements-txt > ./src/qdash/api/requirements.txt
    desc: Export server requirements

  export-workflow:
    cmds:
      - uv export --group workflow --no-hashes --no-emit-project --no-editable --format requirements-txt > ./src/qdash/workflow/requirements.txt
    desc: Export qcflow requirements

  export-dev:
    cmds:
      - uv export --all-groups --no-hashes --no-emit-project --no-editable --format requirements-txt > .devcontainer/requirements.txt
    desc: Export all requirements

  export-all:
    cmds:
      - task export-api
      - task export-workflow
      - task export-dev
    desc: Export all requirements

  build-api:
    cmds:
      - task export-api
      - docker compose build --no-cache api

  build-workflow:
    cmds:
      - task export-workflow
      - docker compose build --no-cache workflow
