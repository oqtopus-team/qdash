/**
 * Generated by orval v7.6.0 üç∫
 * Do not edit manually.
 * QDash Server
 * API for QDash
 * OpenAPI spec version: 0.0.1
 */
import type { ServerRoutersChipTaskTaskId } from "./serverRoutersChipTaskTaskId";
import type { ServerRoutersChipTaskQid } from "./serverRoutersChipTaskQid";
import type { ServerRoutersChipTaskUpstreamId } from "./serverRoutersChipTaskUpstreamId";
import type { ServerRoutersChipTaskMessage } from "./serverRoutersChipTaskMessage";
import type { ServerRoutersChipTaskInputParameters } from "./serverRoutersChipTaskInputParameters";
import type { ServerRoutersChipTaskOutputParameters } from "./serverRoutersChipTaskOutputParameters";
import type { ServerRoutersChipTaskOutputParameterNames } from "./serverRoutersChipTaskOutputParameterNames";
import type { ServerRoutersChipTaskNote } from "./serverRoutersChipTaskNote";
import type { ServerRoutersChipTaskFigurePath } from "./serverRoutersChipTaskFigurePath";
import type { ServerRoutersChipTaskRawDataPath } from "./serverRoutersChipTaskRawDataPath";
import type { ServerRoutersChipTaskStartAt } from "./serverRoutersChipTaskStartAt";
import type { ServerRoutersChipTaskEndAt } from "./serverRoutersChipTaskEndAt";
import type { ServerRoutersChipTaskElapsedTime } from "./serverRoutersChipTaskElapsedTime";
import type { ServerRoutersChipTaskTaskType } from "./serverRoutersChipTaskTaskType";

/**
 * Task is a Pydantic model that represents a task.
 */
export interface ServerRoutersChipTask {
  task_id?: ServerRoutersChipTaskTaskId;
  qid?: ServerRoutersChipTaskQid;
  name?: string;
  upstream_id?: ServerRoutersChipTaskUpstreamId;
  status?: string;
  message?: ServerRoutersChipTaskMessage;
  input_parameters?: ServerRoutersChipTaskInputParameters;
  output_parameters?: ServerRoutersChipTaskOutputParameters;
  output_parameter_names?: ServerRoutersChipTaskOutputParameterNames;
  note?: ServerRoutersChipTaskNote;
  figure_path?: ServerRoutersChipTaskFigurePath;
  raw_data_path?: ServerRoutersChipTaskRawDataPath;
  start_at?: ServerRoutersChipTaskStartAt;
  end_at?: ServerRoutersChipTaskEndAt;
  elapsed_time?: ServerRoutersChipTaskElapsedTime;
  task_type?: ServerRoutersChipTaskTaskType;
}
