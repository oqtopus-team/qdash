/**
 * Generated by orval v7.5.0 🍺
 * Do not edit manually.
 * QDash Server
 * API for QDash
 * OpenAPI spec version: 0.0.1
 */
import type { TaskUpstreamId } from "./taskUpstreamId";
import type { TaskInputParameters } from "./taskInputParameters";
import type { TaskOutputParameters } from "./taskOutputParameters";
import type { TaskNote } from "./taskNote";
import type { TaskStartAt } from "./taskStartAt";
import type { TaskEndAt } from "./taskEndAt";
import type { TaskElapsedTime } from "./taskElapsedTime";

/**
 * Task is a Pydantic model that represents a task in the execution response.

Attributes
----------
    task_id (str): The ID of the task.
    name (str): The name of the task.
    upstream_id (Optional[str]): The ID of the upstream task.
    status (str): The current status of the task.
    message (str): The message associated with the task.
    input_parameters (dict[str, Any]): The input parameters of the task.
    output_parameters (dict[str, Any]): The output parameters of the task.
    output_parameter_names (List[str]): The names of the output parameters.
    note (dict[str, Any]): The note associated with the task.
    figure_path (List[str]): The paths to the figures associated with the task.
    start_at (Optional[str]): The start time of the task.
    end_at (Optional[str]): The end time of the task.
    elapsed_time (Optional[str]): The total elapsed time of the task.
    task_type (str): The type of the task.
def modify_name(cls, v: str, values: dict[str, Any]) -> str:
 */
export interface Task {
  task_id: string;
  qid?: string;
  name: string;
  upstream_id?: TaskUpstreamId;
  status: string;
  message: string;
  input_parameters?: TaskInputParameters;
  output_parameters?: TaskOutputParameters;
  output_parameter_names?: string[];
  note?: TaskNote;
  figure_path?: string[];
  start_at?: TaskStartAt;
  end_at?: TaskEndAt;
  elapsed_time?: TaskElapsedTime;
  task_type: string;
}
